/*! For license information please see 3159.70683816.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([["3159"],{50633:function(s,n,a){"use strict";a.r(n),a.d(n,{default:function(){return l}});var t=a("51910"),e=a("35859"),l=(0,e.default)({},[["render",t.render]])},51910:function(s,n,a){"use strict";a.r(n);var t=a("45298");a.es(t,n)},45298:function(s,n,a){"use strict";a.r(n),a.d(n,{render:function(){return c}});var t=a("38613");let e={class:"van-doc-markdown-body"},l=[(0,t.createStaticVNode)('<h1>useEventListener</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Attaching an event when the component is <code>mounted</code> and <code>activated</code>, then removing the event when the component is <code>unmounted</code> and <code>deactivated</code>.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useEventListener } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-comment">// attach the resize event to window</span>\n    <span class="hljs-title function_">useEventListener</span>(<span class="hljs-string">&#39;resize&#39;</span>, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;window resize&#39;</span>);\n    });\n\n    <span class="hljs-comment">// attach the click event to the body element</span>\n    <span class="hljs-title function_">useEventListener</span>(\n      <span class="hljs-string">&#39;click&#39;</span>,\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;click body&#39;</span>);\n      },\n      { <span class="hljs-attr">target</span>: <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span> },\n    );\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="remove-event-listener" tabindex="-1">Remove Event Listener</h3><p><code>useEventListener</code> will return a <code>cleanup</code> function\uFF0Cyou can call it to remove the event listener.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useEventListener } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> cleanup = <span class="hljs-title function_">useEventListener</span>(<span class="hljs-string">&#39;resize&#39;</span>, <span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#39;window resize&#39;</span>);\n    });\n\n    <span class="hljs-title function_">cleanup</span>();\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Options</span> = {\n  target?: <span class="hljs-title class_">EventTarget</span> | <span class="hljs-title class_">Ref</span>&lt;<span class="hljs-title class_">EventTarget</span>&gt;;\n  capture?: <span class="hljs-built_in">boolean</span>;\n  passive?: <span class="hljs-built_in">boolean</span>;\n};\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">useEventListener</span>(<span class="hljs-params">\n  <span class="hljs-keyword">type</span>: <span class="hljs-built_in">string</span>,\n  listener: EventListener,\n  options?: Options,\n</span>): <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">void</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="params" tabindex="-1">Params</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>type</td><td>Event type</td><td><em>string</em></td><td>-</td></tr><tr><td>listener</td><td>Callback function</td><td><em>EventListener</em></td><td>-</td></tr><tr><td>options</td><td>Options</td><td><em>Options</em></td><td>-</td></tr></tbody></table></div><div class="van-doc-card"><h3 id="options" tabindex="-1">Options</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default Value</th></tr></thead><tbody><tr><td>target</td><td>Target element</td><td><em>EventTarget | Ref&lt;EventTarget&gt;</em></td><td><code>window</code></td></tr><tr><td>capture</td><td>Whether to enable capture</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td>passive</td><td>if true, indicates that the listener will never call <code>preventDefault()</code></td><td><em>boolean</em></td><td><code>false</code></td></tr></tbody></table></div>',9)];function c(s,n){return(0,t.openBlock)(),(0,t.createElementBlock)("div",e,l)}}}]);