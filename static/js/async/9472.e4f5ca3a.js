/*! For license information please see 9472.e4f5ca3a.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([["9472"],{53233:function(t,e,s){"use strict";s.r(e),s.d(e,{default:function(){return l}});var n=s("56989"),a=s("35859"),l=(0,a.default)({},[["render",n.render]])},56989:function(t,e,s){"use strict";s.r(e);var n=s("42743");s.es(n,e)},42743:function(t,e,s){"use strict";s.r(e),s.d(e,{render:function(){return o}});var n=s("38613");let a={class:"van-doc-markdown-body"},l=[(0,n.createStaticVNode)('<h1>useRect</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Get the size of an element and its position relative to the viewport, equivalent to <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect" target="_blank">Element.getBoundingClientRect</a>.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="basic-usage" tabindex="-1">Basic Usage</h3><pre><code class="language-html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;root&quot;</span> /&gt;</span>\n</code></pre><pre><code class="language-js"><span class="hljs-keyword">import</span> { ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { useRect } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> root = <span class="hljs-title function_">ref</span>();\n\n    <span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-keyword">const</span> rect = <span class="hljs-title function_">useRect</span>(root);\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(rect); <span class="hljs-comment">// -&gt; the size of an element and its position relative to the viewport</span>\n    });\n\n    <span class="hljs-keyword">return</span> { root };\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useRect</span>(<span class="hljs-params">\n  element: Element | Window | Ref&lt;Element | Window | <span class="hljs-literal">undefined</span>&gt;,\n</span>): <span class="hljs-title class_">DOMRect</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="return-value" tabindex="-1">Return Value</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td>width</td><td>Width of the element</td><td><em>number</em></td></tr><tr><td>height</td><td>Height of the element</td><td><em>number</em></td></tr><tr><td>top</td><td>The distance from the top to the top-left of the viewport</td><td><em>number</em></td></tr><tr><td>left</td><td>The distance from the left to the top-left of the viewport</td><td><em>number</em></td></tr><tr><td>right</td><td>The distance from the right to the top-left of the viewport</td><td><em>number</em></td></tr><tr><td>bottom</td><td>The distance from the bottom to the top-left of the viewport</td><td><em>number</em></td></tr></tbody></table></div>',7)];function o(t,e){return(0,n.openBlock)(),(0,n.createElementBlock)("div",a,l)}}}]);