/*! For license information please see 7194.e3d61ab9.js.LICENSE.txt */
(self.webpackChunk=self.webpackChunk||[]).push([["7194"],{31911:function(s,a,n){"use strict";n.r(a),n.d(a,{default:function(){return t}});var e=n("7570"),l=n("35859"),t=(0,l.default)({},[["render",e.render]])},7570:function(s,a,n){"use strict";n.r(a);var e=n("20912");n.es(e,a)},20912:function(s,a,n){"use strict";n.r(a),n.d(a,{render:function(){return c}});var e=n("38613");let l={class:"van-doc-markdown-body"},t=[(0,e.createStaticVNode)('<h1>useRaf</h1><div class="van-doc-card"><h3 id="intro" tabindex="-1">Intro</h3><p>Provide convenient call and cancellation of <a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame" target="_blank">requestAnimationFrame</a>.</p></div><h2 id="usage" tabindex="-1">Usage</h2><div class="van-doc-card"><h3 id="single-call" tabindex="-1">Single Call</h3><p>By using the <code>useRaf</code> method, you can execute a function before the next browser repaint.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { useRaf } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n    <span class="hljs-title function_">useRaf</span>(<span class="hljs-function">() =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(++count); <span class="hljs-comment">// It will only be executed once.</span>\n    });\n  },\n};\n</code></pre></div><div class="van-doc-card"><h3 id="loop-calls" tabindex="-1">Loop Calls</h3><p>By using the <code>isLoop</code> option, you can execution of a function repeatedly at a specified interval until it is canceled.</p><pre><code class="language-js"><span class="hljs-keyword">import</span> { useRaf } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@vant/use&#39;</span>;\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-title function_">setup</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;\n    <span class="hljs-keyword">const</span> cancelRaf = <span class="hljs-title function_">useRaf</span>(\n      <span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(++count); <span class="hljs-comment">// Execute infinitely until canceled</span>\n\n        <span class="hljs-keyword">if</span> (count === <span class="hljs-number">5</span>) {\n          <span class="hljs-title function_">cancelRaf</span>();\n        }\n      },\n      {\n        <span class="hljs-attr">isLoop</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// Enable the loop</span>\n        <span class="hljs-attr">interval</span>: <span class="hljs-number">100</span>, <span class="hljs-comment">// Set call interval</span>\n      },\n    );\n  },\n};\n</code></pre></div><h2 id="api" tabindex="-1">API</h2><div class="van-doc-card"><h3 id="type-declarations" tabindex="-1">Type Declarations</h3><pre><code class="language-ts"><span class="hljs-keyword">function</span> <span class="hljs-title function_">useRaf</span>(<span class="hljs-params">\n  callback: () =&gt; <span class="hljs-built_in">void</span>,\n  options: {\n    interval?: <span class="hljs-built_in">number</span>;\n    isLoop?: <span class="hljs-built_in">boolean</span>;\n  },\n</span>): <span class="hljs-built_in">void</span>;\n</code></pre></div><div class="van-doc-card"><h3 id="params" tabindex="-1">Params</h3><table><thead><tr><th>Name</th><th>Description</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>callback</td><td>Callback</td><td><em>() =&gt; void</em></td><td>-</td></tr><tr><td>options</td><td>Options</td><td><em>{ interval?: number; isLoop?: boolean }</em></td><td><em>{ interval: 0; isLoop: false }</em></td></tr></tbody></table></div>',8)];function c(s,a){return(0,e.openBlock)(),(0,e.createElementBlock)("div",l,t)}}}]);